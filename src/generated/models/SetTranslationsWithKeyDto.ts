/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SetTranslationsWithKeyDto
 */
export interface SetTranslationsWithKeyDto {
    /**
     * Key name to set translations for
     * @type {string}
     * @memberof SetTranslationsWithKeyDto
     */
    key: string;
    /**
     * Object mapping language tag to translation
     * @type {{ [key: string]: string; }}
     * @memberof SetTranslationsWithKeyDto
     */
    translations: { [key: string]: string; };
    /**
     * List of languages to return translations for. 
     * 
     * If not provided, only modified translation will be provided.
     *     
     * @type {Set<string>}
     * @memberof SetTranslationsWithKeyDto
     */
    languagesToReturn?: Set<string>;
}

/**
 * Check if a given object implements the SetTranslationsWithKeyDto interface.
 */
export function instanceOfSetTranslationsWithKeyDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "key" in value;
    isInstance = isInstance && "translations" in value;

    return isInstance;
}

export function SetTranslationsWithKeyDtoFromJSON(json: any): SetTranslationsWithKeyDto {
    return SetTranslationsWithKeyDtoFromJSONTyped(json, false);
}

export function SetTranslationsWithKeyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetTranslationsWithKeyDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': json['key'],
        'translations': json['translations'],
        'languagesToReturn': !exists(json, 'languagesToReturn') ? undefined : json['languagesToReturn'],
    };
}

export function SetTranslationsWithKeyDtoToJSON(value?: SetTranslationsWithKeyDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': value.key,
        'translations': value.translations,
        'languagesToReturn': value.languagesToReturn,
    };
}

