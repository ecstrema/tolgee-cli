/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TranslationMemoryItemModel
 */
export interface TranslationMemoryItemModel {
    /**
     * 
     * @type {string}
     * @memberof TranslationMemoryItemModel
     */
    targetText: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationMemoryItemModel
     */
    baseText: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationMemoryItemModel
     */
    keyName: string;
    /**
     * 
     * @type {number}
     * @memberof TranslationMemoryItemModel
     */
    similarity: number;
}

/**
 * Check if a given object implements the TranslationMemoryItemModel interface.
 */
export function instanceOfTranslationMemoryItemModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "targetText" in value;
    isInstance = isInstance && "baseText" in value;
    isInstance = isInstance && "keyName" in value;
    isInstance = isInstance && "similarity" in value;

    return isInstance;
}

export function TranslationMemoryItemModelFromJSON(json: any): TranslationMemoryItemModel {
    return TranslationMemoryItemModelFromJSONTyped(json, false);
}

export function TranslationMemoryItemModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationMemoryItemModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'targetText': json['targetText'],
        'baseText': json['baseText'],
        'keyName': json['keyName'],
        'similarity': json['similarity'],
    };
}

export function TranslationMemoryItemModelToJSON(value?: TranslationMemoryItemModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'targetText': value.targetText,
        'baseText': value.baseText,
        'keyName': value.keyName,
        'similarity': value.similarity,
    };
}

