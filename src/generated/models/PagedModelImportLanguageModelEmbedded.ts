/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ImportLanguageModel } from './ImportLanguageModel';
import {
    ImportLanguageModelFromJSON,
    ImportLanguageModelFromJSONTyped,
    ImportLanguageModelToJSON,
} from './ImportLanguageModel';

/**
 * 
 * @export
 * @interface PagedModelImportLanguageModelEmbedded
 */
export interface PagedModelImportLanguageModelEmbedded {
    /**
     * 
     * @type {Array<ImportLanguageModel>}
     * @memberof PagedModelImportLanguageModelEmbedded
     */
    languages?: Array<ImportLanguageModel>;
}

/**
 * Check if a given object implements the PagedModelImportLanguageModelEmbedded interface.
 */
export function instanceOfPagedModelImportLanguageModelEmbedded(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PagedModelImportLanguageModelEmbeddedFromJSON(json: any): PagedModelImportLanguageModelEmbedded {
    return PagedModelImportLanguageModelEmbeddedFromJSONTyped(json, false);
}

export function PagedModelImportLanguageModelEmbeddedFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedModelImportLanguageModelEmbedded {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'languages': !exists(json, 'languages') ? undefined : ((json['languages'] as Array<any>).map(ImportLanguageModelFromJSON)),
    };
}

export function PagedModelImportLanguageModelEmbeddedToJSON(value?: PagedModelImportLanguageModelEmbedded | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'languages': value.languages === undefined ? undefined : ((value.languages as Array<any>).map(ImportLanguageModelToJSON)),
    };
}

