/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ErrorResponseBody } from './ErrorResponseBody';
import {
    ErrorResponseBodyFromJSON,
    ErrorResponseBodyFromJSONTyped,
    ErrorResponseBodyToJSON,
} from './ErrorResponseBody';
import type { PagedModelImportLanguageModel } from './PagedModelImportLanguageModel';
import {
    PagedModelImportLanguageModelFromJSON,
    PagedModelImportLanguageModelFromJSONTyped,
    PagedModelImportLanguageModelToJSON,
} from './PagedModelImportLanguageModel';

/**
 * 
 * @export
 * @interface ImportAddFilesResultModel
 */
export interface ImportAddFilesResultModel {
    /**
     * 
     * @type {Array<ErrorResponseBody>}
     * @memberof ImportAddFilesResultModel
     */
    errors: Array<ErrorResponseBody>;
    /**
     * 
     * @type {PagedModelImportLanguageModel}
     * @memberof ImportAddFilesResultModel
     */
    result?: PagedModelImportLanguageModel;
}

/**
 * Check if a given object implements the ImportAddFilesResultModel interface.
 */
export function instanceOfImportAddFilesResultModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "errors" in value;

    return isInstance;
}

export function ImportAddFilesResultModelFromJSON(json: any): ImportAddFilesResultModel {
    return ImportAddFilesResultModelFromJSONTyped(json, false);
}

export function ImportAddFilesResultModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportAddFilesResultModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errors': ((json['errors'] as Array<any>).map(ErrorResponseBodyFromJSON)),
        'result': !exists(json, 'result') ? undefined : PagedModelImportLanguageModelFromJSON(json['result']),
    };
}

export function ImportAddFilesResultModelToJSON(value?: ImportAddFilesResultModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errors': ((value.errors as Array<any>).map(ErrorResponseBodyToJSON)),
        'result': PagedModelImportLanguageModelToJSON(value.result),
    };
}

