/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModifiedEntityModel } from './ModifiedEntityModel';
import {
    ModifiedEntityModelFromJSON,
    ModifiedEntityModelFromJSONTyped,
    ModifiedEntityModelToJSON,
} from './ModifiedEntityModel';
import type { ProjectActivityAuthorModel } from './ProjectActivityAuthorModel';
import {
    ProjectActivityAuthorModelFromJSON,
    ProjectActivityAuthorModelFromJSONTyped,
    ProjectActivityAuthorModelToJSON,
} from './ProjectActivityAuthorModel';

/**
 * 
 * @export
 * @interface ProjectActivityModel
 */
export interface ProjectActivityModel {
    /**
     * 
     * @type {number}
     * @memberof ProjectActivityModel
     */
    revisionId: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectActivityModel
     */
    timestamp: number;
    /**
     * 
     * @type {string}
     * @memberof ProjectActivityModel
     */
    type: ProjectActivityModelTypeEnum;
    /**
     * 
     * @type {ProjectActivityAuthorModel}
     * @memberof ProjectActivityModel
     */
    author?: ProjectActivityAuthorModel;
    /**
     * 
     * @type {{ [key: string]: Array<ModifiedEntityModel>; }}
     * @memberof ProjectActivityModel
     */
    modifiedEntities?: { [key: string]: Array<ModifiedEntityModel>; };
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof ProjectActivityModel
     */
    meta?: { [key: string]: object; };
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ProjectActivityModel
     */
    counts?: { [key: string]: number; };
}


/**
 * @export
 */
export const ProjectActivityModelTypeEnum = {
    Unknown: 'UNKNOWN',
    SetTranslationState: 'SET_TRANSLATION_STATE',
    SetTranslations: 'SET_TRANSLATIONS',
    DismissAutoTranslatedState: 'DISMISS_AUTO_TRANSLATED_STATE',
    TranslationCommentAdd: 'TRANSLATION_COMMENT_ADD',
    TranslationCommentDelete: 'TRANSLATION_COMMENT_DELETE',
    TranslationCommentEdit: 'TRANSLATION_COMMENT_EDIT',
    TranslationCommentSetState: 'TRANSLATION_COMMENT_SET_STATE',
    ScreenshotDelete: 'SCREENSHOT_DELETE',
    ScreenshotAdd: 'SCREENSHOT_ADD',
    KeyTagsEdit: 'KEY_TAGS_EDIT',
    KeyNameEdit: 'KEY_NAME_EDIT',
    KeyDelete: 'KEY_DELETE',
    CreateKey: 'CREATE_KEY',
    ComplexEdit: 'COMPLEX_EDIT',
    Import: 'IMPORT',
    CreateLanguage: 'CREATE_LANGUAGE',
    EditLanguage: 'EDIT_LANGUAGE',
    DeleteLanguage: 'DELETE_LANGUAGE',
    CreateProject: 'CREATE_PROJECT',
    EditProject: 'EDIT_PROJECT'
} as const;
export type ProjectActivityModelTypeEnum = typeof ProjectActivityModelTypeEnum[keyof typeof ProjectActivityModelTypeEnum];


/**
 * Check if a given object implements the ProjectActivityModel interface.
 */
export function instanceOfProjectActivityModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "revisionId" in value;
    isInstance = isInstance && "timestamp" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function ProjectActivityModelFromJSON(json: any): ProjectActivityModel {
    return ProjectActivityModelFromJSONTyped(json, false);
}

export function ProjectActivityModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectActivityModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'revisionId': json['revisionId'],
        'timestamp': json['timestamp'],
        'type': json['type'],
        'author': !exists(json, 'author') ? undefined : ProjectActivityAuthorModelFromJSON(json['author']),
        'modifiedEntities': !exists(json, 'modifiedEntities') ? undefined : json['modifiedEntities'],
        'meta': !exists(json, 'meta') ? undefined : json['meta'],
        'counts': !exists(json, 'counts') ? undefined : json['counts'],
    };
}

export function ProjectActivityModelToJSON(value?: ProjectActivityModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'revisionId': value.revisionId,
        'timestamp': value.timestamp,
        'type': value.type,
        'author': ProjectActivityAuthorModelToJSON(value.author),
        'modifiedEntities': value.modifiedEntities,
        'meta': value.meta,
        'counts': value.counts,
    };
}

