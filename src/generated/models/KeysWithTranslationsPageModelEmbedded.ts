/* tslint:disable */
/* eslint-disable */
/**
 * Tolgee API 
 * Tolgee Server API reference
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KeyWithTranslationsModel } from './KeyWithTranslationsModel';
import {
    KeyWithTranslationsModelFromJSON,
    KeyWithTranslationsModelFromJSONTyped,
    KeyWithTranslationsModelToJSON,
} from './KeyWithTranslationsModel';

/**
 * 
 * @export
 * @interface KeysWithTranslationsPageModelEmbedded
 */
export interface KeysWithTranslationsPageModelEmbedded {
    /**
     * 
     * @type {Array<KeyWithTranslationsModel>}
     * @memberof KeysWithTranslationsPageModelEmbedded
     */
    keys?: Array<KeyWithTranslationsModel>;
}

/**
 * Check if a given object implements the KeysWithTranslationsPageModelEmbedded interface.
 */
export function instanceOfKeysWithTranslationsPageModelEmbedded(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function KeysWithTranslationsPageModelEmbeddedFromJSON(json: any): KeysWithTranslationsPageModelEmbedded {
    return KeysWithTranslationsPageModelEmbeddedFromJSONTyped(json, false);
}

export function KeysWithTranslationsPageModelEmbeddedFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeysWithTranslationsPageModelEmbedded {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'keys': !exists(json, 'keys') ? undefined : ((json['keys'] as Array<any>).map(KeyWithTranslationsModelFromJSON)),
    };
}

export function KeysWithTranslationsPageModelEmbeddedToJSON(value?: KeysWithTranslationsPageModelEmbedded | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'keys': value.keys === undefined ? undefined : ((value.keys as Array<any>).map(KeyWithTranslationsModelToJSON)),
    };
}

